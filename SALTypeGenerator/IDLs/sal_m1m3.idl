module m1m3 {
	struct Actuators {
	  float	cyltemp[120];
	  float	envtemp[120];
	  long	error[120];
	  float	lvdtcorr[120];
	  long	position[120];
	  float	pressure[120];
	  long	setpoint[120];
	  long	status[120];
	};
	#pragma keylist Actuators
	struct Application {
	  float	demand[6];
	  float	error[6];
	  float	position[6];
	  short	status[16];
	};
	#pragma keylist Application
	struct Electrical {
	  long	error[16];
	  short	status[16];
	  long	voltage[16];
	};
	#pragma keylist Electrical
	struct LUT {
	  float	param[32];
	};
	#pragma keylist LUT
	struct LimitSensors {
	  short	liftoff[64];
	  short	limit[64];
	};
	#pragma keylist LimitSensors
	struct Metrology {
	  long	distance[16];
	  long	error[16];
	  short	status[16];
	};
	#pragma keylist Metrology
	struct Support {
	  float	force[6];
	  long	stepcnt[6];
	  long	targetpos[6];
	};
	#pragma keylist Support
	struct Surface {
	  float	Calibrated[1024];
	  long	Raw[1024];
	};
	#pragma keylist Surface
	struct TC {
	  float	error[16];
	  float	setpoint[16];
	  short	status[16];
	  float	temperature[16];
	};
	#pragma keylist TC
	struct command_configure {
	  string<32>	device;
	  string<32>	property;
	  string<32>	action;
	  string<32>	value;
	  string	spec_id;
	};
	#pragma keylist command_configure
	struct command_start {
	  string<32>	device;
	  string<32>	property;
	  string<32>	action;
	  string<32>	value;
	  string	configuration;
	};
	#pragma keylist command_start
	struct command_target {
	  string<32>	device;
	  string<32>	property;
	  string<32>	action;
	  string<32>	value;
	  double	azimuth;
	  double	elevation;
	};
	#pragma keylist command_target
	struct command_update {
	  string<32>	device;
	  string<32>	property;
	  string<32>	action;
	  string<32>	value;
	  string	lut_id;
	};
	#pragma keylist command_update
	struct logevent_interlock {
	  long	priority;
	  string	detail;
	};
	#pragma keylist logevent_interlock
	struct logevent_limitError {
	  long	priority;
	  string	limit;
	  string	type;
	};
	#pragma keylist logevent_limitError
	struct logevent_tempError {
	  long	priority;
	  string	device;
	  long	severity;
	  double	temp;
	};
	#pragma keylist logevent_tempError
	struct command
	{
      string<32>	device;
      string<32>	property;
      string<32>	action;
      string<32>	value;
      string<128>	modifiers;
	};
	#pragma keylist command
	struct ackcmd
	{
      long 		ack;
      long 		error;
      string<32>	result;
	};
	#pragma keylist ackcmd
	struct logevent
	{
      string<128>	message;
	};
	#pragma keylist logevent
};

