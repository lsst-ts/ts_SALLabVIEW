module dome {
	struct Application {
	  float	azError;
	  float	azPosition;
	  float	azTarget;
	  float	elevError;
	  float	elevPosition;
	  float	elevTarget;
	  float	lvError[72];
	  float	lvPosition[72];
	  float	lvTarget[72];
	  float	scrError;
	  float	scrPosition;
	  float	scrTarget;
	};
	#pragma keylist Application
	struct Azimuth {
	  float	Calibrated[16];
	  long	Raw[16];
	};
	#pragma keylist Azimuth
	struct Bogies {
	  float	currentMeasured[12];
	  float	currentTarget[12];
	  float	rpmMeasured[12];
	  float	rpmTarget[12];
	  long	status[12];
	  float	temperature[12];
	  float	torqueMeasured[12];
	  float	torqueTarget[12];
	};
	#pragma keylist Bogies
	struct CapacitorBank {
	  float	charge[10];
	  float	chargeRate[10];
	  float	setpoint;
	  long	status[10];
	  float	temperature[10];
	};
	#pragma keylist CapacitorBank
	struct Electrical {
	  float	Calibrated[32];
	  long	Raw[16];
	};
	#pragma keylist Electrical
	struct Louvers {
	  float	calibrated[72];
	  long	raw[72];
	  float	temperature[72];
	  float	windSpeed[72];
	};
	#pragma keylist Louvers
	struct Metrology {
	  float	azCalibrated[4];
	  long	azEncoder[4];
	  float	elevCalibrated[4];
	  long	elevEncoder[4];
	  long	screenEncoder[4];
	  long	shutterL[4];
	  long	shutterR[4];
	};
	#pragma keylist Metrology
	struct Screen {
	  float	Calibrated[16];
	  long	Raw[16];
	};
	#pragma keylist Screen
	struct Shutter {
	  float	Calibrated[16];
	  long	Raw[16];
	};
	#pragma keylist Shutter
	struct TC {
	  float	boosterSpeed[4];
	  float	calibrated[16];
	  float	glycolFlow[4];
	  float	glycolTemperature[4];
	  long	raw[16];
	  float	setPoint[16];
	  long	status[16];
	};
	#pragma keylist TC
	struct command_Crawl {
	  string<32>	device;
	  string<32>	property;
	  string<32>	action;
	  string<32>	value;
	  double	azVelocity;
	  double	elVelocity;
	};
	#pragma keylist command_Crawl
	struct command_Louvers {
	  string<32>	device;
	  string<32>	property;
	  string<32>	action;
	  string<32>	value;
	  double	openPercent[72];
	};
	#pragma keylist command_Louvers
	struct command_Move {
	  string<32>	device;
	  string<32>	property;
	  string<32>	action;
	  string<32>	value;
	  double	azimuth;
	  double	elevation;
	};
	#pragma keylist command_Move
	struct command_Track {
	  string<32>	device;
	  string<32>	property;
	  string<32>	action;
	  string<32>	value;
	  string	mode;
	};
	#pragma keylist command_Track
	struct command_start {
	  string<32>	device;
	  string<32>	property;
	  string<32>	action;
	  string<32>	value;
	  string	configuration;
	};
	#pragma keylist command_start
	struct logevent_interlock {
	  long	priority;
	  string	detail;
	};
	#pragma keylist logevent_interlock
	struct logevent_posLimit {
	  long	priority;
	  string	device;
	  string	limit;
	  string	type;
	};
	#pragma keylist logevent_posLimit
	struct logevent_powerError {
	  long	priority;
	  string	device;
	  long	severity;
	};
	#pragma keylist logevent_powerError
	struct logevent_tempError {
	  long	priority;
	  string	device;
	  long	severity;
	};
	#pragma keylist logevent_tempError
	struct command
	{
      string<32>	device;
      string<32>	property;
      string<32>	action;
      string<32>	value;
      string<128>	modifiers;
	};
	#pragma keylist command
	struct ackcmd
	{
      long 		ack;
      long 		error;
      string<32>	result;
	};
	#pragma keylist ackcmd
	struct logevent
	{
      string<128>	message;
	};
	#pragma keylist logevent
};

