module camera {
	struct CCC_status {
	  long	Image_Status[20];
	};
	#pragma keylist CCC_status
	struct Cluster_Encoder {
	  float	PSF[9648];
	};
	#pragma keylist Cluster_Encoder
	struct Cold {
	  short	Valve_status[6];
	};
	#pragma keylist Cold
	struct Cryo {
	  float	Cold_temperature[3];
	  float	Compressor;
	  float	Compressor_speed[2];
	  float	Cryo_temperature[12];
	  float	Dischaarge_pressure[2];
	  float	Discharge_temp[2];
	  short	Flow_interlock[2];
	  float	Heater_current[6];
	  float	Heater_voltage[6];
	  float	Intake_flow[2];
	  float	Intake_pressure[2];
	  float	Intake_temp[2];
	  float	Post_expansion_pressure[2];
	  float	Post_expansion_temp[2];
	  float	Pre_expansion_pressure[2];
	  float	Pre_expansion_temp[2];
	  float	Return_temp[2];
	};
	#pragma keylist Cryo
	struct Filter {
	  short	REB_ID;
	};
	#pragma keylist Filter
	struct GAS {
	  short	REB_ID;
	};
	#pragma keylist GAS
	struct GDS {
	  long	flag[20];
	};
	#pragma keylist GDS
	struct PCMS {
	  short	REB_ID;
	};
	#pragma keylist PCMS
	struct Prot {
	  long	Status[2];
	};
	#pragma keylist Prot
	struct Purge {
	  long	Valves;
	};
	#pragma keylist Purge
	struct SAS {
	  short	REB_ID;
	};
	#pragma keylist SAS
	struct SDS {
	  long	flag[20];
	};
	#pragma keylist SDS
	struct Shutter {
	  string<32>	Profile_function;
	};
	#pragma keylist Shutter
	struct WAS {
	  short	REB_ID;
	};
	#pragma keylist WAS
	struct WDS {
	  long	flag[20];
	};
	#pragma keylist WDS
	struct command_configure {
	  string<32>	device;
	  string<32>	property;
	  string<32>	action;
	  string<32>	value;
	  string	specId;
	};
	#pragma keylist command_configure
	struct command_initGuiders {
	  string<32>	device;
	  string<32>	property;
	  string<32>	action;
	  string<32>	value;
	  string	roiSpec;
	};
	#pragma keylist command_initGuiders
	struct command_initImage {
	  string<32>	device;
	  string<32>	property;
	  string<32>	action;
	  string<32>	value;
	  double	deltaT;
	};
	#pragma keylist command_initImage
	struct command_setFilter {
	  string<32>	device;
	  string<32>	property;
	  string<32>	action;
	  string<32>	value;
	  string	name;
	};
	#pragma keylist command_setFilter
	struct command_takeImages {
	  string<32>	device;
	  string<32>	property;
	  string<32>	action;
	  string<32>	value;
	  long	numImages;
	  double	expTime;
	  boolean	shutter;
	  boolean	science;
	  boolean	guide;
	  boolean	wfs;
	  string	imageSequenceName;
	};
	#pragma keylist command_takeImages
	struct logevent_startIntegration {
	  long	priority;
	  string	imageName;
	};
	#pragma keylist logevent_startIntegration
	struct command
	{
      string<32>	device;
      string<32>	property;
      string<32>	action;
      string<32>	value;
      string<128>	modifiers;
	};
	#pragma keylist command
	struct ackcmd
	{
      long 		ack;
      long 		error;
      string<32>	result;
	};
	#pragma keylist ackcmd
	struct logevent
	{
      string<128>	message;
	};
	#pragma keylist logevent
};

